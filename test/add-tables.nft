#!/usr/sbin/nft -f
# File: all-tables.nft
# Description: A test NFT file to exercise 'add table' Vim syntax highlightings.
#
# Identifiers begin with an alphabetic character (a-z,A-Z), 
# followed by zero or more alphanumeric characters (a-z,A-Z,0-9) 
# and the characters slash (/), backslash (\), underscore (_) 
# and dot (.). 
#
# Identifiers using different characters or clashing with a 
# keyword need to be enclosed in double quotes (").  
#
# base_cmd add_cmd 'table' 
# nft_line/nft_base_cmd/nft_base_cmd_add/nft_base_cmd_add_table/nft_add_table_chain_block policy_spec
#
################################################################################
# true positive test (properly hightlighted correctly; has good content; perfect
################################################################################

table A
table Z
table a
table z
table a0
table z0
table A/
table A\
table A_
table A.
table A

# base_cmd add_cmd 'table' table_spec family_spec family_spec_explicit
add table filter

table T  # that one creates an empty table
# base_cmd add_cmd 'table' table_spec identifier <STRING>
table xxxx
# base_cmd add_cmd 'table' table_spec identifier 'last'
table last

# base_cmd add_cmd 'table' table_spec table_block
table T { }
table T { } ; #
table inet xxxx { };
table bridge xxxx { };
table netdev xxxx { };
table arp xxxx { };

table my.IpTable
table my/IpTable
add table my/IpTable
add table my\IpTable    # defaults to 'ip' family
table my./_IpTable
add table my./_IpTable
table my.IpTable
add table my.IpTable
add table my_./\IpTable    # defaults to 'ip' family

# base_cmd add_cmd 'table' table_spec table_block common_block 'include'
table T {
    include "file"
}
# base_cmd add_cmd 'table' table_spec table_block common_block 'define'
table T { define A = 1 }
table T { 
    define A = 1 
    define A = 1 ;
    define last = 1
    define last = 1 ;
    define A = {} ;
}
# base_cmd add_cmd 'table' table_spec table_block common_block 'redefine'
table T { redefine A = 1 }
table T { redefine A = 1; }
table T { 
    redefine A = 1
    redefine A = 1 ;
}
# base_cmd add_cmd 'table' table_spec table_block common_block 'undefine'
table T {
    undefine A
    undefine B 
}
table xxxx { undefine abc ; }
table xxxx { undefine abc ; } ; 

# base_cmd add_cmd 'table' table_spec table_block table_options 'comment'
# base_cmd add_cmd 'table' table_spec table_block 'comment' string
table T { 
    comment Hello
    comment Hello
    comment Hello
    comment Hello 
} 
table bridge T { comment 'Hello world!' }
table T { comment "Hello world!" }
table T { comment *Hello world!* }
table netdev xxxx { comment "test" } ;
table xxxx { comment 'test' };
table T { comment *Hello world!* ;  }
table arp xxxx { comment test;  };

# base_cmd add_cmd 'table' table_spec table_block 'policy' 'offload'
# base_cmd add_cmd 'table' table_spec table_block hook_spec 'type' 
# base_cmd add_cmd 'table' table_spec table_block 'flags' flag_spec
table T {flags member_1}
table T {flags member_1;}
table T {flags member_1;};
table T {flags member_1 ;}
table T {flags member_1; }
table T {flags member_1 ; }
table T {flags member_1 ;};
table T {flags member_1; };
table T {flags member_1 ; };
table T { flags member_1 }
table T { flags member_1; }
table T {flags member_2,member_3}
table T { flags member_2, member_3 }
table T { flags member_1; } ;
table T { flags member_2,member_3} ; 
table T { flags member_2, member_3 } ; 
# base_cmd add_cmd 'table' table_spec table_block { table_options ';' }
table T { flags member_1 } ;
table ip xxxx { flags a, b, c};
table xxxx { ; flags a, b, c; comment "new stuff"; };
table T { flags a, b, c; chain C { type ; }; };

table myIpTable { flags dormant; }
table netdev myNetdev { flags dormant; }
table bridge myBridge { flags dormant; }
table arp myArpTable { flags dormant; }
table ip myIpTable { flags dormant; }
table ip6 myIp6Table { flags dormant; }
table inet myInetTable { flags dormant; }

table T {
    # common_block
    include "/directory/subdirectory/filename.filetype";
    define A = 1
    redefine A = 2
    undefine A
    # table_option
    flags a, b, c
    comment Hello
}

# base_cmd add_cmd 'table' table_spec table_block 'chain' chain_block
table T { chain C { } }
table ip T { chain C { } }
table ip6 T { chain C { } }
table inet T { chain C { } }
table netdev T { chain C { } }
table bridge T { chain C { } }
table arp T { chain C { } }

table T { chain last }
table T { chain last; }
table T { chain last; };
table xxxx { 
    chain last  
}
table xxxx { 
    chain last; };
table T { chain C }
table T { chain C };
table T { chain C ; } ;
table T { chain C ; } ;
table T { chain C { }; };
table T { chain C { }; chain D { }; };
add table T { 
    chain C {
        comment asdf 
    }; 
    chain D { }; 
};

# base_cmd add_cmd 'table' table_spec table_block 'set' set_block
table T { set S { } }
table last { set S { } }
table T { set last { } }
table last { set last { } }
table ip last { set S { } }
table ip T { set S { } }
table ip6 T { set S { } }
table inet T { set S { } }
table netdev T { set S { } }
table bridge T { set S { } }
table arp T { set S { } }
table T { 
    chain S {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { set S { typeof A.B : interval 15 } }
table T { set S { type string : } }
table T { set S { type mark : interval mark.time } }
table T { set S { type dscp : ecn.classid } }
table T { set S { type ecn : } }
table T { set S { type classid : } }
table T { set S { type time : } }
table T { set S { flags constant,interval,timeout,dynamic } }
table T { set S { timeout 15 } }
table T { set S { gc-interval 15 } }
table T { set S { timeout 15; gc-interval 15 } }
table T { set S { counter } }
table T { set S { counter bytes 123 } }
table T { set S { counter packets 123 } }
table T { set S { counter packets 123 bytes 123 } }
table T { set S { counter bytes 123 packets 123 } }
table T { set S { limit rate 123 } }
table T { set S { limit rate over 123 } }
table T { set S { limit rate until 123 } }
table T { set S { quota over 123 bytes } }
table T { set S { quota over 123 string } }
table T { set S { quota over 123 bytes used 123 bytes } }
table T { set S { quota over 123 string used 123 string } }
table T { set S { quota until 123 bytes } }
table T { set S { quota until 123 string } }
table T { set S { quota until 123 bytes used 123 bytes } }
table T { set S { quota until 123 string used 123 string } }
table T { 
    set S { 
        counter; 
        quota; 
        limit } 
}
table T { set S { ct count 123 } }
table T { set S { ct count over 123 } }
table T { set S { last } }
table T { set S { last used never } }
table T { set S { last used 4h15m20s } }
table T { set S { policy performance } }
table T { set S { policy memory } }
table T { set S { size 123 } }
table T { set S { comment Hello } }
table T { set S { elements = $VARIABLE } }
table T { set S { elements = { a, b, c } } }
table T { set S { auto-merge } }
table ip filter {
    set myset {
        type inet_service
        flags timeout
        elements = { http expires 9s}
    }
}
table ip filter {
    set myset {
        type ipv4_addr
        elements = { 1.1.1.1 }
    }
}
table inet filter {
    set myset_ipv4 {
        type ipv4_addr;
        elements = { $server1_ipv4 , $workstation1_ipv4 }
    }
    set myset_ipv6 {
        type ipv6_addr;
        elements = { $server1_ipv6 , $workstation1_ipv6 }
    }
}

# base_cmd add_cmd 'table' table_spec table_block 'map' map_block
table T { map S { } }
table last { map S { } }
table T { map last { } }
table last { map last { } }
table ip last { map S { } }
table ip T { map S { } }
table ip6 T { map S { } }
table inet T { map S { } }
table netdev T { map S { } }
table bridge T { map S { } }
table arp T { map S { } }
table T { 
    chain S {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { map S { typeof A.B : interval 15 } }
table T { map S { type string : } }
table T { map S { type mark : interval mark.time } }
table T { map S { type dscp : ecn.classid } }
table T { map S { type ecn : } }
table T { map S { type classid : } }
table T { map S { type time : } }
table T { map S { flags constant,interval,timeout,dynamic } }
table T { map S { timeout 15 } }
table T { map S { gc-interval 15 } }
table T { map S { timeout 15; gc-interval 15 } }
table T { map S { counter } }
table T { map S { counter bytes 123 } }
table T { map S { counter packets 123 } }
table T { map S { counter packets 123 bytes 123 } }
table T { map S { counter bytes 123 packets 123 } }
table T { map S { limit rate 123 } }
table T { map S { limit rate over 123 } }
table T { map S { limit rate until 123 } }
table T { map S { quota over 123 bytes } }
table T { map S { quota over 123 string } }
table T { map S { quota over 123 bytes used 123 bytes } }
table T { map S { quota over 123 string used 123 string } }
table T { map S { quota until 123 bytes } }
table T { map S { quota until 123 string } }
table T { map S { quota until 123 bytes used 123 bytes } }
table T { map S { quota until 123 string used 123 string } }
table T { 
    map S { 
        counter; 
        quota; 
        limit } 
}
table T { map S { ct count 123 } }
table T { map S { ct count over 123 } }
table T { map S { last } }
table T { map S { last used never } }
table T { map S { last used 4h15m20s } }
table T { map S { policy performance } }
table T { map S { policy memory } }
table T { map S { size 123 } }
table T { map S { comment Hello } }
table T { map S { elements = $VARIABLE } }
table T { map S { elements = { a, b, c } } }
table ip filter {
    map mymap {
        type inet_service
        flags timeout
        elements = { http expires 9s}
    }
}
table ip filter {
    map mymap {
        type ipv4_addr
        elements = { 1.1.1.1 }
    }
}
table inet filter {
    map myset_ipv4 {
        type ipv4_addr;
        elements = { $server1_ipv4 , $workstation1_ipv4 }
    }
    map myset_ipv6 {
        type ipv6_addr;
        elements = { $server1_ipv6 , $workstation1_ipv6 }
    }
}

# base_cmd add_cmd 'table' table_spec table_block 'flowtable' flowtable_block
table T { 
    flowtable F {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { flowtable F { } }
table ip T { flowtable F { } }
table ip6 T { flowtable F { } }
table inet T { flowtable F { } }
table netdev T { flowtable F { } }
table bridge T { flowtable F { } }
table arp T { flowtable F { } }
table T { flowtable F { hook ABC priority -150 } }
table T { flowtable F { devices MYDEVS = { eth0, wlan0 } }
table T { flowtable F { flags offload } }
table T { flowtable F { counter } }

# base_cmd add_cmd 'table' table_spec table_block 'counter' counter_block
table T { 
    counter C {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { counter C { } }
table ip T { counter C { } }
table ip6 T { counter C { } }
table inet T { counter C { } }
table netdev T { counter C { } }
table bridge T { counter C { } }
table arp T { counter C { } }
table T { counter C { packets 123 bytes 15 } }

# base_cmd add_cmd 'table' table_spec table_block 'quota' quota_block
table T { 
    quota Q {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { quota Q { } }
table ip T { quota Q { } }
table ip6 T { quota Q { } }
table inet T { quota Q { } }
table netdev T { quota Q { } }
table bridge T { quota Q { } }
table arp T { quota Q { } }
table T { quota Q { 15 bytes } }
table T { quota Q { 15 bytes used 15 bytes } }
table T { quota Q { 15 bytes used 15 string } }
table T { quota Q { 15 string } }
table T { quota Q { 15 string used 123 bytes } }
table T { quota Q { 15 string used 123 string } }
table T { quota Q { over 15 bytes } }
table T { quota Q { over 15 bytes used 15 bytes } }
table T { quota Q { over 15 bytes used 15 string } }
table T { quota Q { over 15 string } }
table T { quota Q { over 15 string used 123 bytes } }
table T { quota Q { over 15 string used 123 string } }
table T { quota Q { until 15 bytes } }
table T { quota Q { until 15 bytes used 15 bytes } }
table T { quota Q { until 15 bytes used 15 string } }
table T { quota Q { until 15 string } }
table T { quota Q { until 15 string used 123 bytes } }
table T { quota Q { until 15 string used 123 string } }

# base_cmd add_cmd 'table' table_spec table_block 'ct' 'helper' ct_helper_block
table T { 
    ct helper {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { ct helper { } }
table ip T { ct helper { } }
table ip6 T { ct helper { } }
table inet T { ct helper { } }
table netdev T { ct helper { } }
table bridge T { ct helper { } }
table arp T { ct helper { } }
table T { ct helper { type "MYTYPE" protocol tcp 23 15 bytes } }
table T { ct helper { l3-proto ip6 } }

# base_cmd add_cmd 'table' table_spec table_block 'ct' 'timeout' ct_timeout_block
table T { 
    ct timeout {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { ct timeout { } }
table ip T { ct timeout { } }
table ip6 T { ct timeout { } }
table inet T { ct timeout { } }
table netdev T { ct timeout { } }
table bridge T { ct timeout { } }
table arp T { ct timeout { } }
table T { ct timeout { proto tcp 23 } }
table T { ct timeout { l3-proto ip6 } }
table T { ct timeout { policy = { ABC : 126 } }
table T { ct timeout { policy = { ABC : 1H15M } }

# base_cmd add_cmd 'table' table_spec table_block 'ct' 'expectation' ct_expect_block
table T { 
    ct expectation {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { ct expectation { } }
table ip T { ct expectation { } }
table ip6 T { ct expectation { } }
table inet T { ct expectation { } }
table netdev T { ct expectation { } }
table bridge T { ct expectation { } }
table arp T { ct expectation { } }
table T { ct expectation { proto tcp 23 } }
table T { ct expectation { dport 23 } }
table T { ct expectation { size 123 } }
table T { ct expectation { timeout 15h } }
table T { ct expectation { l3-proto netdev } }

# base_cmd add_cmd 'table' table_spec table_block 'limit' limit_block
table T { 
    limit {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { limit L { } }
table ip T { limit L { } }
table ip6 T { limit L { } }
table inet T { limit L { } }
table netdev T { limit L { } }
table bridge T { limit L { } }
table arp T { limit L { } }
table T { limit L { rate 15 something } }
table T { limit L { rate 15 bytes } }
table T { limit L { rate 15 string } }
table T { limit L { rate over 15 / second } }
table T { limit L { rate over 15 / minute } }
table T { limit L { rate over 15 / hour } }
table T { limit L { rate over 15 / day } }
table T { limit L { rate over 15 / week } }
table T { limit L { rate over 15 bytes / second } }
table T { limit L { rate over 15 bytes / minute } }
table T { limit L { rate over 15 bytes / hour } }
table T { limit L { rate over 15 bytes / day } }
table T { limit L { rate over 15 bytes / week } }
table T { limit L { rate over 15 string / second } }
table T { limit L { rate over 15 string / minute } }
table T { limit L { rate over 15 string / hour } }
table T { limit L { rate over 15 string / day } }
table T { limit L { rate over 15 string / week } }
table T { limit L { rate until 15 / second } }
table T { limit L { rate until 15 / minute } }
table T { limit L { rate until 15 / hour } }
table T { limit L { rate until 15 / day } }
table T { limit L { rate until 15 / week } }
table T { limit L { rate until 15 bytes / second } }
table T { limit L { rate until 15 bytes / minute } }
table T { limit L { rate until 15 bytes / hour } }
table T { limit L { rate until 15 bytes / day } }
table T { limit L { rate until 15 bytes / week } }
table T { limit L { rate until 15 string / second } }
table T { limit L { rate until 15 string / minute } }
table T { limit L { rate until 15 string / hour } }
table T { limit L { rate until 15 string / day } }
table T { limit L { rate until 15 string / week } }

# base_cmd add_cmd 'table' table_spec table_block 'secmark' secmark_block
table T { 
    secmark SM {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { secmark SM { } }
table ip T { secmark SM { } }
table ip6 T { secmark SM { } }
table inet T { secmark SM { } }
table netdev T { secmark SM { } }
table bridge T { secmark SM { } }
table arp T { secmark SM { } }
table T { secmark SM { "some security settings goes into here" } }

# base_cmd add_cmd 'table' table_spec table_block 'synproxy' synproxy_block
table T { 
    synproxy SP {
        # common_block
        include "/directory/subdirectory/filename.filetype"
        define A = 1
        redefine A = 2
        undefine A
    }
}
table T { synproxy SP { } }
table ip T { synproxy SP { } }
table ip6 T { synproxy SP { } }
table inet T { synproxy SP { } }
table netdev T { synproxy SP { } }
table bridge T { synproxy SP { } }
table arp T { synproxy SP { } }
table T { synproxy SP { mss 1490 wscale 5 } }
table T { synproxy SP { mss 1490 wscale 5 24H15S } }
table T { synproxy SP { mss 1490 wscale 5 sackperm } }
table T { synproxy SP { mss 1490 wscale 5 24H15S sackperm } }
table T { synproxy SP { mss 1490 ; wscale 5 } }
table T { synproxy SP { mss 1490 ; wscale 5 } }
table T { synproxy SP { mss 1490 ; wscale 5 } }
table T { synproxy SP { mss 1490 ; wscale 5 } }


################################################################################
# true negative test: properly hightlighted wrongly to show an error; 
# so far, so good.
################################################################################

table "*weirdname"  # allowable '*' but only inside double quote???
table "$weirdname"  # allowable '$' but only inside double quote???
table "#weirdname"  # allowable '#' but only inside double quote???

table ip 
table ip6   


table inet  #

table bridge ;  
table netdev  # intentionally invalid; invalid table identifier
table arp  # intentionally invalid; invalid table identifier
table ip {  };

table 0   # invalid identifier (started with non-letter)
table 0abc   # invalid identifier (started with non-letter)
table /abc   # invalid identifier (started with non-letter)
table \abc   # invalid identifier (started with non-letter)
table _abc   # invalid identifier (started with non-letter)
table .abc   # invalid identifier (started with non-letter)

table T { devices = eth0 }

table T { chain C { type filter hook ingress ; }; };  # incomplete
table T { chain C { type filter hook ingress devices ; }; };  # incomplete
table T { chain C { type filter hook ingress devices = ; }; };  # incomplete

table T { chain C { type filter hook ingress device eth0 priority ; }; };  # incomplete

table T { chain C { devices =    $eth0,$ABC,$DEF;  }; };
table T { chain C { devices ={ $MYVARIABLE; } } }
table T { chain C { devices ={ MYVARIABLE } } }
table T { chain C { devices = MYVARIABLE } }
table T { chain C { devices = $MYVARIABLE } }

table A!error


################################################################################
# false negative test: highlighted wrongly; still has good content; oops.
################################################################################


table xxxx { flags ,, b, c };  " oopsie
table xxxx { flags a, b,  };  " oopsie
table ip6 xxxx { flags , a, b };  " oopsie
table xxxx { chain 'MyIpNet' { chain }; };
table xxxx { chain "MyIpNet" { chain }; };

table T { chain C { devices =$eth0,$DEV1  } }
table T { chain C { devices =x$eth0  } }
table T { chain C { devices = x$eth0  } }
table T { chain C { devices      =     not_a_variable  } }
table T { chain C { devices      =     x$eth0  } }
table T { chain C { devices =eth0  } }
table T { chain C { devices = eth0;  } }
table T { chain C { devices = { eth0; }  } }

table T { chain C { devices = { eth0 } # comment
    }  # comment
}  # comment
table T { chain C { devices = { eth0 } ; # comment
    }; # comment
}; # comment
table T { chain C { devices = { eth0 } }; };


################################################################################
# false positive test: looks highlighted correctly; has bad content; oops.
################################################################################

table T { chain C { type filter ; }; };  # incomplete

table xxxx { chain MyIpNet {
    chain last;  # oopsie
    };
};

table @TX
table A @# @   # invalid character
table A# { };   # invalid character
table A$ { };   # invalid character
table A%   # invalid character
table A^   # invalid character
table A&   # invalid character
table A*   # invalid character
table A(   # invalid character
table A)   # invalid character
table A-   # invalid character
table A+   # invalid character
table A=   # invalid character
table A[   # invalid character
table A]   # invalid character
table A<   # invalid character
table A>   # invalid character
table A,   # invalid character
table A?   # invalid character
table A|   # invalid character
table A:   # invalid character

