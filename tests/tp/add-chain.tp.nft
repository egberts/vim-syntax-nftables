#!/usr/sbin/nft -f
# File: all-chain.nft
# Description: A false positive test NFT file to exercise 'chain' Vim syntax highlightings.
#
# Identifiers begin with an standard practice of allowing
# alphabetic character (a-z,A-Z) for first character followed
# by zero or more alphanumeric characters (a-z,A-Z,0-9),
# characters dash (-), and underscore (_).
#
# Dot, backslash, forward slash are discourage as dot
# confused nftable concatenation effort.
#
# base_cmd add_cmd 'chain'
# base_cmd 'add' add_cmd 'chain'
# base_cmd add_cmd 'table' TABLE_ID '{' table_block 'chain' CHAIN_ID '{' chain_block
# base_cmd 'add' add_cmd 'table' TABLE_ID '{' table_block chain' CHAIN_ID {' chain_block
# nft_line/nft_base_cmd/nft_base_cmd_add/nft_base_cmd_add_table/nft_add_table_chain_block policy_spec
#
################################################################################
# true positive test (properly hightlighted correctly; has good content; perfect
################################################################################

# setup
flush ruleset
define MY_PRIORITY = security
add table T
add table ip Tip
add table ip6 Tip6
add table inet Tinet
add table netdev Tnetdev
add table bridge Tbridge
add table arp Tarp
add chain T JumpPoint { return; };
add chain ip Tip JumpPointIp { return; };
add chain ip6 Tip6 JumpPointIp6 { return; };
add chain inet Tinet JumpPointInet { return; };
add chain netdev Tnetdev JumpPointNetdev { return; };
add chain bridge Tbridge JumpPointBridge { return; };
add chain arp Tarp JumpPointArp { return; };
add set ip Tip Sip { type ipv4_addr; flags interval; elements = { 127.0.0.1 }; };

add chain T C {
    type filter hook input priority 0; policy drop;
    # tcp flags syn tcp dport ssh meter flood size 128000 { ip saddr timeout 10s limit rate over 10/second} add @Sip { ip saddr timeout 1m } drop;
 
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    iifgroup 123 
    oifgroup 123;
    #######include "../include/chain-flags.nft";
    redirect ;  # only in 'ip'
    comment "asdf";
    counter;
    iifname "br*";
    iiftype 1;
    notrack;
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    dnat to 127.0.0.1;  # 'dnat' can only be used with 'type nat' chains.
    drop  # verdict_expr
    # flow offload @flood;  # obviously can only be used with 'hook ingress' netdev family chains.
    goto JumpPoint  # verdict_expr
    hour 23 ;
    jump JumpPoint  # verdict_expr
    mark 0x0000;
    meta l4proto tcp;
    snat to 127.0.0.1;  # 'snat' can only be used with 'type nat' chains.
    time 12 ;
    cpu 1 ;
    day 4 ;
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;
}

add chain ip Tip Cip {
    type filter hook input priority 0; policy drop;
    # tcp flags syn tcp dport ssh meter flood size 128000 { ip saddr timeout 10s limit rate over 10/second} add @Sip { ip saddr timeout 1m } drop;
 
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    iifgroup 123 
    oifgroup 123;
    #######include "../include/chain-flags.nft";
    redirect ;  # only in 'ip'
    comment "asdf";
    counter;
    iifname "br*";
    iiftype 1;
    notrack;
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    dnat to 127.0.0.1;  # 'dnat' can only be used with 'type nat' chains.
    drop  # verdict_expr
    # flow offload @flood;  # obviously can only be used with 'hook ingress' netdev family chains.
    goto JumpPointIp  # verdict_expr
    hour 23 ;
    jump JumpPointIp  # verdict_expr
    mark 0x0000;
    meta l4proto tcp;
    snat to 127.0.0.1;  # 'snat' can only be used with 'type nat' chains.
    time 12 ;
    cpu 1 ;
    day 4 ;
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;
}
delete chain ip Tip Cip

# also ip family but NAT-specific; Covering remaining statements
add chain ip Tip Cip {
    type nat hook prerouting priority 0; policy drop;
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    iifgroup 123 
    oifgroup 123;
    redirect ;
    comment "asdf";
    counter;
    iifname "br*";
    iiftype 1;
    notrack;
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    dnat to 192.168.1.1 ;
    drop  # verdict_expr
    # flow offload @flood;  # obviously can only be used with 'hook ingress' netdev family chains.
    goto JumpPointIp  # verdict_expr
    hour 23 ;
    jump JumpPointIp  # verdict_expr
    mark 0x00001;
    meta l4proto tcp;
    snat to 192.168.1.1;
    time 12 ;
    cpu 1 ;
    day 4 ;
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;


}

# ip6-specific; Covering remaining statements 
add chain ip6 Tip6 Cip6 {
    type filter hook input priority 0; policy drop;
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    iifgroup 123 
    oifgroup 123;
    redirect ;  # cannot use 'redirect' in netdev family (ip-only)
    comment "asdf";
    counter;
    iifname "br*";
    iiftype 1;
    notrack;
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    dnat to fffe::ffff;  # only available at 'type nat hook prerouting' chains
    drop  # verdict_expr
    # flow offload @flood;  # obviously can only be used with 'hook ingress' netdev family chains.
    goto JumpPointIp6  # verdict_expr
    hour 23 ;
    jump JumpPointIp6  # verdict_expr
    mark 0x00002;
    meta l4proto tcp;
    snat to fffe::ffff  # only available at 'type nat hook prerouting' chains
    time 12 ;
    cpu 1 ;
    day 4 ;
    # fwd to fffe::ffff;  # 'fwd to' only works within netdev family
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;


}

# inet-specific; Covering remaining statements 
add chain inet Tinet Cinet {
    type filter hook input priority 0; policy drop;
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    iifgroup 123 
    oifgroup 123;
    redirect ;  # cannot use 'redirect' in netdev family (ip-only)
    comment "asdf";
    counter;
    iifname "br*";
    iiftype 1;
    notrack;
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    dnat ip to 192.168.1.1 ;  # only available at 'type nat hook prerouting' chains
    drop  # verdict_expr
    # flow offload @flood;  # obviously can only be used with 'hook ingress' netdev family chains.
    goto JumpPointInet  # verdict_expr
    hour 23 ;
    jump JumpPointInet  # verdict_expr
    mark 0x00002;
    meta l4proto tcp;
    snat ip6 to fffe::ffff;  # only available at 'type nat hook prerouting' chains
    time 12 ;
    cpu 1 ;
    day 4 ;
    # fwd ip6 to fffe::ffff device eno2;  # 'fwd to' only works within 'netdev' family
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;


}

# netdev-specific; Covering remaining statements 
add chain netdev Tnetdev Cnetdev {
    type filter hook ingress priority 0; policy drop;
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    iifgroup 123 
    oifgroup 123;
    comment "asdf";
    counter;
    devices = { eno2 };  # cannot use 'devices' with ip family (netdev?)
    iifname "br*";
    iiftype 1;
    notrack;
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    drop  # verdict_expr
    ######flow offload @flood;
    goto JumpPointNetdev  # verdict_expr
    hour 23 ;
    jump JumpPointNetdev  # verdict_expr
    mark 0x00000001
    meta l4proto tcp;
    time 12 ;
    cpu 1 ;
    day 4 ;
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;


}

# bridge-specific; Covering remaining statements 
add chain bridge Tbridge Cbridge {
    type filter hook input priority 0; policy drop;
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    meta ibriport "bro";
    meta obriport "bro";
    iifgroup 123 
    ibriport "br0";
    obriport "br0";
    oifgroup 123;
    ######include "../include/chain-flags.nft";
    comment "asdf";
    counter;
    ibrname "br*";
    iifname "br*";
    iiftype 1;
    notrack;
    obrname "asdf";
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    drop  # verdict_expr
    ######flow offload @flood;
    goto JumpPointBridge  # verdict_expr
    hour 23 ;
    jump JumpPointBridge  # verdict_expr
    mark 0x00000001
    meta l4proto tcp;
    time 12 ;
    cpu 1 ;
    day 4 ;
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;
}

# arp-specific; Covering remaining statements 
add chain arp Tarp Carp {
    type filter hook input priority 0; policy drop;
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    iifgroup 123 
    oifgroup 123;
    ######include "../include/chain-flags.nft";
    comment "asdf";
    counter;
    iifname "br*";
    iiftype 1;
    ######nftrace 1;
    notrack;
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    ipsec 1 ;
    skgid 0x0000;
    skuid 0x0000;
    drop  # verdict_expr
    ######flow offload @flood;
    goto JumpPointArp  # verdict_expr
    hour 23 ;
    jump JumpPointArp  # verdict_expr
    mark 0x00000001
    meta l4proto tcp;
    # snat to 192.168.1.1;  # only for 'type nat hook prerouting' ip/ip6/inet family
    time 12 ;
    cpu 1 ;
    day 4 ;
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;
}

# clean up
delete chain bridge Tbridge Cbridge { type filter hook input priority 12345; policy drop; }
delete chain netdev Tnetdev Cnetdev { type filter hook ingress priority 12345; policy drop; } 
# prerouting hook chain, type nat @ mangle priority
delete chain inet Tinet Cinet { type nat hook prerouting priority mangle; policy accept; };
delete chain ip6 Tip6 Cip6
delete chain ip Tip Cip { type filter hook input priority srcnat; policy accept; };
delete chain T C { type filter hook input priority srcnat; policy accept; };

delete table arp Tarp
delete table bridge Tbridge
delete table netdev Tnetdev
delete table inet Tinet
delete table ip6 Tip6
delete table ip Tip
delete table T
undefine MY_PRIORITY








