#!/usr/sbin/nft -f
# File: all-chain.nft
# Description: A false positive test NFT file to exercise 'chain' Vim syntax highlightings.
#
# Identifiers begin with an standard practice of allowing
# alphabetic character (a-z,A-Z) for first character followed
# by zero or more alphanumeric characters (a-z,A-Z,0-9),
# characters dash (-), and underscore (_).
#
# Dot, backslash, forward slash are discourage as dot
# confused nftable concatenation effort.
#
# base_cmd add_cmd 'chain'
# base_cmd 'add' add_cmd 'chain'
# base_cmd add_cmd 'table' TABLE_ID '{' table_block 'chain' CHAIN_ID '{' chain_block
# base_cmd 'add' add_cmd 'table' TABLE_ID '{' table_block chain' CHAIN_ID {' chain_block
# nft_line/nft_base_cmd/nft_base_cmd_add/nft_base_cmd_add_table/nft_add_table_chain_block policy_spec
#
################################################################################
# true positive test (properly hightlighted correctly; has good content; perfect
################################################################################

# input hook chain, type filter @ srcnat priority
add table T
chain T C { type filter hook input priority srcnat; policy accept;};
delete chain T C { type filter hook input priority srcnat; policy accept; };

add table ip Tip
chain ip Tip Cip { type filter hook input priority srcnat; policy accept;};
delete chain ip Tip Cip { type filter hook input priority srcnat; policy accept; };
delete table ip Tip

define MY_PRIORITY = security
add table ip6 Tip6
add chain ip6 Tip6 Cip6 { type filter hook input priority $MY_PRIORITY; policy drop; }
delete chain ip6 Tip6 Cip6
delete table ip6 Tip6
undefine MY_PRIORITY

# prerouting hook chain, type nat @ mangle priority
add table inet Tinet
chain inet Tinet Cinet        { type nat hook prerouting priority mangle; policy accept; };
delete chain inet Tinet Cinet { type nat hook prerouting priority mangle; policy accept; };
delete table inet Tinet

add table netdev Tnetdev
add chain netdev Tnetdev Cnetdev    { type filter hook ingress priority 12345; policy drop; }
delete chain netdev Tnetdev Cnetdev { type filter hook ingress priority 12345; policy drop; } 
delete table netdev Tnetdev

add table bridge Tbridge
add chain bridge Tbridge Cbridge    { type filter hook input priority -12345; policy drop; }
delete chain bridge Tbridge Cbridge { type filter hook input priority 12345; policy drop; }
delete table bridge Tbridge


add table ip Tip
chain ip Tip Cip {  # regular base chain ('regular chain')
        ip daddr 192.168.1.100 dnat to 192.168.1.200;
}
delete chain ip Tip Cip
delete table ip Tip

add table ip Tip
table ip Tip {
    chain Cip {
        # hook base chain ('hook chain')
        type filter hook input priority 0; policy drop;
        ip daddr 192.168.1.100 dnat to 192.168.1.200;
    };
};
delete chain ip Tip Cip { type filter hook input priority 0; policy drop; };


add table T;
add chain T C
delete chain T C

add chain ip Tip Cip    { type filter hook input priority 0; policy accept; }
delete chain ip Tip Cip { type filter hook input priority 0; policy accept; }

# base_cmd add_cmd 'chain' '{' chain_block common_block
add chain ip Tip Cip    { type filter hook input priority 0; policy accept; };
delete chain ip Tip Cip { type filter hook input priority 0; policy accept; };
destroy chain ip Tip Cip
delete table ip Tip
destroy table ip Tip

add set ip Tip Sblackhole { type ipv4_addr; elements = { 1.1.1.1 }; }


add chain ip Tip Cip {
    type route hook input priority 0; policy drop;
    meta rtclassid 14 
    continue  # verdict_expr
    define A = 1
    redefine A = 2
    undefine A
    meta ibriport "bro";
    meta obriport "bro";
    iifgroup 123 
    obriport "br0";
    oifgroup 123;
    include "../include/chain-flags.nft";
    redirect ;
    comment "asdf";
    counter;
    devices = { eno2 };
    ibrname "br*";
    iifname "br*";
    iiftype 1;
    nftrace 1;
    notrack;
    obrname "asdf";
    oifname "adsf";
    pkttype unicast;
    accept  # verdict_expr
    cgroup 123;
    flags offload;
    ipsec ;
    skgid 0x0000;
    skuid 0x0000;
    dnat ;
    drop  # verdict_expr
    flow offload @flood;
    goto input  # verdict_expr
    hour 23 ;
    jump input  # verdict_expr
    mark "asdf";
    meta l4proto tcp;
    snat ;
    time 12 ;
    cpu 1 ;
    day 4 ;
    fwd to ether;
    iif "eno2";
    oif "eno2";
    # inline comment
    return  # verdict_expr
    ;
    add rule tcp flags syn tcp dport ssh meter flood size 128000 { ip saddr timeout 10s limit rate over 10/second} add @Sblackhole { ip saddr timeout 1m } drop


}

delete table T
