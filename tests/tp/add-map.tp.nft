#!/usr/sbin/nft -f
# File: all-map
# Description: Test NFT file to exercise '[add] map' Vim syntax highlightings.
#
# base_cmd add_cmd 'map' 
# nft_line/nft_base_cmd/nft_base_cmd_add/nft_base_cmd_add_map
#
################################################################################
# true positive test: properly hightlighted correctly; has good content; perfect
################################################################################
add map ip nat M {
        type ipv4_addr : verdict
        flags dynamic
        elements = { 192.168.1.1 : accept, 192.168.1.2 : drop }
    }

delete map ip nat M
map ip nat M { flags timeout; timeout 1h; type ipv4_addr : verdict; elements = { "127.0.0.1": accept }; };
delete map ip nat M
map ip nat M { type ipv4_addr: verdict; elements = { 127.0.0.1: accept }; comment "A comment string"; }
delete map ip nat M
map ip nat M { policy performance; type ipv4_addr: verdict; elements = { 127.0.0.1:accept }; };  # set_mechanism->map_block->add_cmd->base_cmd->line
delete map ip nat M
map ip nat M { policy memory; type ipv4_addr: verdict; elements = { 127.0.0.1:accept  }; };
delete map ip nat M
map ip nat M { size 123; type ipv4_addr: verdict; elements = { 127.0.0.1:accept  }; };
delete map ip nat M
map ip nat M { elements = { 1:00:1, }; type ipv4_addr: verdict; elements = { 127.0.0.1:accept  }; }
delete map ip nat M
map ip nat M { type ipv4_addr: verdict; policy performance; elements = { 127.0.0.1:accept  }; size 123; flags constant; };
delete map ip nat M
map ip nat M {
    policy performance; 
    include "../include/policy-map-secret.nft"
    type ipv4_addr : verdict;
    elements = { 127.0.0.1:accept  };
    size 123; 
    flags constant;
};
delete map ip nat M
map ip nat M { flags timeout; timeout 1h; type ipv4_addr : verdict; };
delete map ip nat M;
map ip nat M { flags interval; type ipv4_addr : verdict; elements = { 127.0.0.1:drop }; };
destroy map ip nat M;
map ip nat M { type ipv4_addr : verdict; flags dynamic; };
delete map ip nat M
map ip nat M { type ipv4_addr : verdict; flags constant; };

