#!/usr/sbin/nft -f
# File: counter.nft
# Description: A test NFT file to exercise 'counter' keyword Vim syntax highlightings.
#
# bison symbol:   counter_stmt
# syntax pathway: counter_stmt->stateful_stmt->(stmt|stateful_stmt_list)
#
#
# First-Order, First-encountered keywords after 'counter' keyword
# Keyword  Type of stmt    Description
# log      log_stmt        Packet logging
# accept   verdict_stmt    Verdict: accept
# drop     verdict_stmt    Verdict: drop
# continue verdict_stmt    Verdict: continue
# jump     verdict_stmt    Control flow
# return   verdict_stmt    Return from chain
# meta     expr_stmt       Expression involving meta keys
# ip       expr_stmt       Match IP headers
# tcp      expr_stmt       Match TCP headers
# ct       stateful_stmt   Conntrack match or assignment
# limit    stateful_stmt   Rate limiting
# mark     expr_stmt or match_stmt    Firewall mark matching or assignment
# payload  expr_stmt       Match protocol payload
# quota    stateful_stmt   Match on bytes used
# set      set_stmt        Set element addition or update (in update-only rules)
# reject   verdict_stmt    ICMP/TCP rejection
# audit    log_stmt        Similar to log
# synproxy stateful_stmt   TCP SYN proxy setup
################################################################################
# true positive test: properly hightlighted correctly; has good content; perfect
################################################################################

add table ip table_id

add counter ip table_id counter_id packets 5 bytes 1500
add counter ip table_id counter_id packets 5 bytes 1500;
add counter ip table_id counter_id packets 5 bytes 1500;
add counter ip table_id counter_id packets 5 bytes 1500 ;
add counter ip table_id counter_id packets 5 bytes 1500 ;

# 'counter' as a statement ('stmt')
add counter table_id counter_id
add counter table_id counter_id;
add counter table_id counter_id;
add counter table_id counter_id ;
add counter table_id counter_id ;


add table   inet table_id_inet
add counter inet table_id_inet my_counter_name


add counter table_id counter_id { comment "Nice to say things" }

add counter table_id counter_id { packets 5 bytes 1500 };
add counter table_id counter_id { packets 5 bytes 1500 };
add counter table_id counter_id { packets 5 bytes 1500 } ;
add counter table_id counter_id { packets 5 bytes 1500 } ;

add counter table_id counter_id { packets 5 bytes 1500 };
add counter table_id counter_id { packets 5 bytes 1500 } ;
add counter table_id counter_id { packets 5 bytes 1500 } ;

add counter table_id counter_id {
    define A = 1
    packets 5 bytes 1500
    undefine A
};

counter table_id counter_id
counter table_id counter_id; 
counter table_id counter_id ;
counter table_id counter_id ; 
counter table_id last;

add table ip table_id_ip
add table ip6 table_id_ip6
add table inet table_id_inet
add table netdev table_id_netdev
add table bridge table_id_bridge
add table arp table_id_arp
counter ip     table_id_ip counter_id
counter ip6    table_id_ip6 counter_id;
counter inet   table_id_inet counter_id ;
counter netdev table_id_netdev counter_id; 
counter bridge table_id_bridge counter_id ; 
counter arp    table_id_arp counter_id
counter arp    table_id_arp last


counter table_id counter_id packets 5 bytes 1500
counter table_id counter_id packets 5 bytes 1500; 
counter table_id counter_id packets 5 bytes 1500 ;
counter table_id counter_id packets 5 bytes 1500 ; 

counter table_id counter_id { packets 5 bytes 1500 }; 
counter table_id counter_id { packets 5 bytes 1500;}; 
counter table_id counter_id { packets 5 bytes 1500; }; 
counter table_id counter_id { packets 5 bytes 1500 ; }; 
counter table_id counter_id { packets 5 bytes 1500 } ;
counter table_id counter_id { packets 5 bytes 1500 } ;
counter table_id counter_id { packets 5 bytes 1500 } ; 

# inline comment
counter table_id counter_id { 
    # inline comments
    define A = 1  # inline comments
    redefine A = 2  # inline comments
    undefine A  # inline comments
    packets 5 bytes 1500  # inline comments
    include "../include/comment-just-a-comment.nft";
};


# base_cmd add_cmd 'table' table_spec table_block 'counter' counter_block



add table netdev Tnetdev
table netdev Tnetdev { counter C { }; }
table netdev Tnetdev { counter C { }; } ;
table netdev Tnetdev { counter C { }; };
table netdev Tnetdev { counter C { }; } ;
add table bridge Tbridge
table bridge Tbridge { counter C { }; }
table arp Tarp { counter C { }; }
table T { counter C { packets 123 bytes 15 }; }
table T {
    counter C {
        # common_block
        include "../include/comment-just-a-comment.nft";
        define A = 1
        redefine A = 2
        undefine A
        packets 123 bytes 123;
        packets 123 bytes 123
    }
}


add table inet mytable_inet
table inet mytable_inet {
    # table_block/common_block
    include "../include/comment-just-a-comment.nft";
    # inline comments
    define A = 1  # inline comments
    redefine A = 2  # inline comments
    undefine A  # inline comments
    # table_options
    #flags dormant, persist, owner
    flags dormant
    #counter { counter_config };
    # 'counter' keyword is under add_cmd->table_block->'counter'

    counter C {
        # table_block/counter_block/comment_spec
        include "../include/comment-just-a-comment.nft";
        # counter_config
        # table_block/common_block
        # packets 123
        # bytes 123
        # inline comments
        define A = 1  # inline comments
        redefine A = 2  # inline comments
        undefine A  # inline comments
    }
};

table inet mytable_inet2 {
    counter my_counter_name { };
    chain mychain_inet2 {
        # common_block
        include "../include/comment-just-a-comment.nft";
        define A = 1  # inline comments
        redefine A = 2  # inline comments
        undefine A  # inline comments
        # chain_block/flags_spec
        #flags offload
        # chain_block/rule/rule_alloc/stmt/stateful_stmt/counter_stmt
        counter
        counter packets 123 bytes 123123
        # chain_block/rule/rule_alloc/stmt/objref_stmt/objref_stmt_counter
        counter name my_counter_name
        counter name my_counter_name 

        log prefix "log-prefix~!@#%^&*()_+|}{: ?><`-=\][;'/.," drop
        log queue-threshold 15
        log snaplen 64
        log group 64
        log level debug
        log level info
        log level crit
        log level warn
        log level notice
        log level alert
        log level emerg
        log level err
        log flags tcp sequence
        log flags tcp sequence,options
        log flags tcp options
        log flags ip options
        log flags skuid
        log flags ether
        log flags all

    };
};

# 'counter' as an expression ('expr')
# counter_stmt->stateful_stmt->stateful_stmt_list->set_spec
# counter_stmt->stateful_stmt->(stmt|stateful_stmt_list)


list counter T C

reset counter T C

table Tdefault1 {
    counter named_counter_identifier { };
    chain Cdefault1 {
        define MY_COUNTER_VARNAME = named_counter_identifier
        redefine MY_COUNTER_VARNAME = "named_counter_identifier"
        iif == "eno2" counter;
        counter name $MY_COUNTER_VARNAME;
        counter name "named_counter_identifier";
        counter name named_counter_identifier;
    }
};

# counter_stmt (used in rule/stmt and table-counter counter_block)
table T {
    counter my_count {
        # inline comments
        define A = 1  # inline comments
        redefine A = 2  # inline comments
        undefine A  # inline comments
        include "../include/comment-just-a-comment.nft";
    }
    chain C1 {
        counter name my_count;
    }
} ;


