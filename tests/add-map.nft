#!/usr/sbin/nft -f
# File: all-map
# Description: Test NFT file to exercise '[add] map' Vim syntax highlightings.
#
# base_cmd add_cmd 'map'
# nft_line/nft_base_cmd/nft_base_cmd_add/nft_base_cmd_add_map
#
################################################################################
# true positive test: properly hightlighted correctly; has good content; perfect
################################################################################

# base_cmd add_cmd 'map'

map T S
map ip T S
map ip6 T S
map inet T S
map netdev T S
map bridge T S
map arp T S
 map arp T S

map T C;
# base_cmd add_cmd 'table' table_spec table_block 'map' map_block
table T { map M { } }
table last { map M { } }
table T { map last { } }
table last { map last { } }
table ip last { map M { } }
table ip T { map M { } }
table ip6 T { map M { } }
table inet T { map M { } }
table netdev T { map M { } }
table bridge T { map M { } }
table arp T { map M { } }
table T { map M { typeof A.B : interval 15 } }
table T { map M { type string : } }
table T { map M { type mark : interval mark.time } }
table T { map M { type dscp : ecn.classid } }
table T { map M { type ecn : } }
table T { map M { type classid : } }
table T { map M { type time : } }
table T { map M { flags constant,interval,timeout,dynamic } }
table T { map M { timeout 15 } }
table T { map M { gc-interval 15 } }
table T { map M { timeout 15; gc-interval 15 } }
table T { map M { counter byte } }
table T { map M { counter bytes 123 } }
table T { map M { counter packets 123 } }
table T { map M { counter packets 123 bytes 123 } }
table T { map M { counter bytes 123 packets 123 } }
table T { map M { limit rate 123 } }
table T { map M { limit rate over 123 } }
table T { map M { limit rate until 123 } }
table T { map M { quota over 123 bytes } }
table T { map M { quota over 123 bytes used 123 bytes } }
table T { map M { quota until 123 bytes } }
table T { map M { quota until 123 bytes used 123 bytes } }
table T { map M { counter
    quota until 123 bytes used 123 bytes } }
table T {
    map M {
        counter;
        quota;
        limit }
}
table T { map S { ct count 123 } }
table T { map S { ct count over 123 } }
table T { map S { last } }
table T { map S { last used never } }
table T { map S { last used 4h15m20s } }
table T { map S { policy performance } }
table T { map S { policy memory } }
table T { map S { size 123 } }
table T { map S { comment "Hello" } }
table T { map S { elements = $VARIABLE } }
table T { map S { elements = { a, b, c } } }
table ip filter {
    map mymap {
        type inet_service
        flags constant,dynamic,interval,timeout
        elements = { http expires 9s}
    }
}
table ip filter {
    map mymap {
        type ipv4_addr
        elements = { 1.1.1.1 }
    }
}
table inet filter {
    map myset_ipv4 {
        type ipv4_addr;
        elements = { $server1_ipv4 , $workstation1_ipv4 }
    }
    map myset_ipv6 {
        type ipv6_addr;
        elements = { $server1_ipv6 , $workstation1_ipv6 }
    }
}

map T C { timeout 15:00:01 }
map T C { gc-interval 1:00:1 }
map T C { flags constant }
map T C { flags interval; }
map T C { flags timeout };
map ip T C { flags dynamic ; } ;
map T C { flags constant, interval, timeout, dynamic };
map T C { flags constant; flags interval; flags timeout; flags dynamic };
map T C { comment *A comment string* }
map T C { comment "A comment string" }
map T C { comment 'A comment string' }
map T C { comment single-word }
map T C { policy performance };
map T C { policy memory };
map T C { size 123 };
map T C { elements = 1:00:1 }
map T C { policy performance; elements = 1:00:1; size 123; flags timeout,constant; };
map T C { 
    policy performance; 
include "Secret-map-policy"
    elements = 1:00:1; 
    size 123; 
    flags timeout,constant; 
};

add map T C 
add map ip T C 
add map ip6 T C 
add map inet T C 
add map netdev T C 
add map bridge T C 
add map arp T C 
add map T C ;
add map T C { timeout 15:00:01 }
add map T C { gc-interval 1:00:1 }
add map T C { flags constant }
add map T C { flags interval; }
add map T C { flags timeout };
add map T C { flags dynamic ; } ;
add map T C { flags constant, interval, timeout, dynamic };
add map T C { flags constant; flags interval; flags timeout; flags dynamic };
add map T C { comment *A comment string* }
add map T C { comment "A comment string" }
add map T C { comment 'A comment string' }
add map T C { comment single-word }
add map T C { policy performance };
add map T C { policy memory };
add map T C { size 123 };
add map T C { elements = 1:00:1 }


################################################################################
# true negative test: properly hightlighted wrongly to show an error; 
# so far, so good)
################################################################################

map 


map ip 


map ip T 


map ip6 T 


map inet T 


map netdev T 


map bridge T 


map arp T 


map T C ; 


map T C ;


################################################################################
# false negative test: highlighted wrongly; still has good content; oops.
################################################################################
map ip T C { typeof b };
map T C { typeof a.b.c.d.e.f };

# online comment

add map T C { typeof a : interval g.h };  # online comment
add map T C { typeof a : interval .i };
add map T C { typeof b.c.d.e.f : i.j };
add map T C { typeof b.c.d.e.f : counter  };
add map T C { typeof b.c.d.e.f : quota  };
add map T C { typeof b.c.d.e.f : limit  };
add map T C { typeof b.c.d.e.f : secmark  };
add map T C { typeof b.c.d.e.f : synproxy  };
add map T C { typeof b.c.d.e.f : ct timeout };
add map T C { typeof b.c.d.e.f : ct expectation };
add map T C { type time : };
add map T C { type string : };
add map T C { type mark : };
add map T C { type dscp : };
add map T C { type ecn : };
add map T C { type classid : };
add map T C { type mark.classid : };
add map T C { type time : interval };
add map T C { type time : interval time };
add map T C { type time : interval string; };
add map T C { type time : interval mark ; };
add map T C { type time : interval dscp   ;  }
add map T C { type time : interval ecn };
add map T C { type time : interval classid };
add map T C { 
    define A = -15 ;
    type time : interval classid
};


################################################################################
# false positive test: looks highlighted correctly; has bad content; oops.
################################################################################

map
map ip
map ip
map ip T
map ip6 T
map inet T
map netdev T
map bridge T
map arp T
map T C { timeout 15:00:01 }
map T C { typeof b.c.d.e.f : .k };


