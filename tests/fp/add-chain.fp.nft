#!/usr/sbin/nft -f
# File: all-chain.false-positive.nft
# Description: A false positive test NFT file to exercise 'chain' Vim syntax highlightings.
#
# Identifiers begin with an standard practice of allowing
# alphabetic character (a-z,A-Z) for first character followed
# by zero or more alphanumeric characters (a-z,A-Z,0-9),
# characters dash (-), and underscore (_).
#
# Dot, backslash, forward slash are discourage as dot
# confused nftable concatenation effort.

################################################################################
# false positive test: looks highlighted correctly; has bad content; oops.
################################################################################


table T { chain C { flags offload; } } ;
table T { chain C { flags offload;} }
table T { chain C { flags offload;}; };
table T { chain C { flags offload ;} };
table T {chain C { flags offload; } };
table T {chain C { flags offload ; } };
table T {chain C { flags offload ;}; };

table bridge T { chain { comment 'Hello world!' } }
table netdev xxxx { chain C { comment "test" } ; }


table T {chain C {  flags offload } };
table T { chain C { flags offload; } };
table T { chain C { flags offload; } ; };
# base_cmd add_cmd 'table' table_spec table_block { table_options ';' } };

table T {
chain C {     # common_block
    include "/directory/subdirectory/filename.filetype";
    define A = 1
    redefine A = 2
    undefine A
    # table_option
    flags offload;
    comment Hello
} };

table T { chain C { comment "unique, uh?"; flags a, b, c; chain C { type ; }; };

table inet MyIpNet {
    chain MyForwardChain {
        type filter hook prerouting device wlan0 priority 1;
        flags offload;
        policy drop;
        policy accept;  # cannot set 'policy' twice
    }
    flags dormant
    comment "unique"
};

table T { chain C { devices = { eno2 }  # chain identifier is not 'output', et al.
    }  # comment
}  # comment
table T { chain C { devices = { eno2 } ;  # chain is not 'input', et al.
    }; # comment
}; # comment
